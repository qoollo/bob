openapi: 3.0.0
info:
  title: "Bob Node API"
  description: Bob HTTP Rest API
  version: 0.0.0
paths:
  /status:
    get:
      summary: Returns information about self
      operationId: getStatus
      responses:
        '200':
          description: "A JSON with node info"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        default:
          $ref: '#/components/responses/DefaultError'
  /nodes:
    get:
      summary: Returns a list of known nodes
      operationId: getNodes
      responses:
        '200':
          description: "A JSON array of nodes info and vdisks on them"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Node'
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks:
    get:
      summary: Returns a list of vdisks
      operationId: getVDisks
      responses:
        '200':
          description: "A JSON array of vdisks info"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/VDisk'
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks/{VDiskId}:
    get:
      summary: Returns a vdisk info by ID
      operationId: getVDisk
      parameters:
        - $ref: '#/components/parameters/VDiskIdParam'
      responses:
        '200':
          description: "A JSON with vdisk info"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDisk'
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks/{VDiskId}/partitions:
    get:
      summary: Returns a list of partitions
      operationId: getPartitions
      parameters:
        - $ref: '#/components/parameters/VDiskIdParam'
      responses:
        '200':
          description: "Node info and JSON array with partitions info"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDiskPartitions'
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks/{VDiskId}/partitions/{partitionId}:
    get:
      summary: Returns a partition info by ID
      operationId: getPartition
      parameters: 
        - $ref: '#/components/parameters/VDiskIdParam'
        - name: partitionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A JSON with partition info"
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks/{VDiskId}/partitions/by_timestamp/{timestamp}:
    delete:
      summary: Delete partitions by timestamp
      parameters:
        - $ref: '#/components/parameters/VDiskIdParam'
        - name: timestamp
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks/{VDiskId}/partitions/by_timestamp/{timestamp}/{action}:
    put:
      summary: Attach/Detach a partition by timestamp
      parameters: 
        - $ref: '#/components/parameters/VDiskIdParam'
        - name: timestamp
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: action
          schema:
            type: string
            enum: 
              - attach
              - detach
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks/<vdisk_id>/remount:
    post:
      summary: Remount partitions on vdisk
      parameters:
        - $ref: '#/components/parameters/VDiskIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: '#/components/responses/DefaultError'
  /alien:
    get:
      summary: Returns an alien dir info
      operationId: getAlien
      responses:
        '200':
          description: "A JSON array with alien Node names info"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          $ref: '#/components/responses/DefaultError'
  /vdisks/<vdisk_id>/replicas/local/dirs:
    get:
      summary: Returns directories of local replicas of vdisk
      operationId: getReplicasLocalDirs
      responses:
        '200':
          description: "A JSON array with alien Node names info"
          content:
            application/json:
              schema:
                ref: '#/components/schemas/Dir
        default:
          $ref: '#/components/responses/DefaultError'

components:
  responses:
    DefaultError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    VDiskIdParam:
      name: VDiskId
      in: path
      required: true
      schema:
        type: integer
  schemas:
    Node:
      properties:
        name:
          type: string
        address:
          type: string
        vdisks:
          type: string
          items:
            $ref: '#/components/schemas/VDisk'
      required:
        - name
        - address
    VDisk:
      properties:
        id:
          type: integer
        replicas:
          type: array
          items:
            $ref: '#/components/schemas/Replica'
      required:
        - id
    Replica:
      properties:
        node:
          type: string
        disk:
          type: string
        path:
          type: string
      required:
        - type
        - disk
        - path
    VDiskPartitions:
      properties:
        vdisk:
          type: integer
        node:
          type: string
        disk:
          type: string
        partitions:
          type: array
          items:
            type: string
    Partition:
      properties:
        vdisk:
          type: integer
        node:
          type: string
        disk:
          type: string
        timestamp:
          type: integer
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Dir:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Dir'
