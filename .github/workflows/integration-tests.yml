name: integration-tests
on:
  push:
    branches: [ "518-implement-semi-automatic-integration-tests" ]
  pull_request:
    branches: [ "518-implement-semi-automatic-integration-tests" ]
  pull_request_review:
    branches: [ "518-implement-semi-automatic-integration-tests" ]
  workflow_dispatch:
    inputs:
      amount_of_nodes:
        description: 'Amount of nodes in bob cluster for tests'
        required: true
        default: '4'
      storage_path:
        description: 'Path for test runtime files'
        required: true
        default: '/tmp'
      disks:
        description: 'Vdisks count'
        required: true
        default: '4'
      replicas:
        description: 'Amount of vdisks replicas'
        required: true
        default: '2'
      payload:
        description: 'Test payload'
        required: true
        default: '10240'
      count:
        description: 'Amount of records to process during test'
        required: true
        default: '10000'

jobs:
  deploy-and-test:
    strategy:
      matrix:
        key: [8, 16]
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repo
        uses: actions/checkout@v2
      - name: Install deps
        run: |
          /usr/bin/pip3 install -r ./requirements.txt
        working-directory: ./integration-tests
      - name: Get version data
        run: |
          echo "VERSION=$(cat bob-apps/Cargo.toml | grep ^version | head -1 | awk '{print $3}' | sed -e 's/"//g' | sed -e 's/-/./g')" >> $GITHUB_ENV
          echo "VERSION_NO_FORMATTING=$(cat bob-apps/Cargo.toml | grep ^version | head -1 | awk '{print $3}' | sed -e 's/"//g')" >> $GITHUB_ENV
      - name: Get tools
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-packages.yml
          workflow_conclusion: success
          branch: v${{ env.VERSION_NO_FORMATTING }}
          name: bob-binaries-${{ matrix.key }}
          check_artifacts:  true
      - name: Generate config files for docker and bob
        run: |
          ./generate_from_templates.py -a ${{ github.event.inputs.amount_of_nodes }} -v qoollo/bob:${{ env.VERSION }}-key${{ matrix.key }} --path ${{ github.event.inputs.storage_path }}
        working-directory: ./integration-tests
      - name: Deploy docker containers
        run: |
          ./deploy.py --path ${{ github.event.inputs.storage_path }}/generated_configs -d ${{ github.event.inputs.disks }} -r ${{ github.event.inputs.replicas }}
        working-directory: ./integration-tests
      - name: Run write/read tests
        run: |
          ./tests.py -l ${{ github.event.inputs.payload }} -c ${{ github.event.inputs.count }} -n 0.0.0.0 -k ${{ matrix.key }}
        working-directory: ./integration-tests
